name: YaMDb

# Controls when the action will run.
on:
  push:
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: SetUp Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

  build_image_into_docker_hub:
    name: Push Docker Hub Image
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: SetUp Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./backend/Dockerfile
          tags:  vedius/foodgram-backend:v0.0.1


  push_frontend:
    name: Push Docker 
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: SetUp Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./frontend/Dockerfile
          tags: vedius/foodgram-frontend:v0.0.1

  deploy:
    runs-on: ubuntu-latest
    needs: build_image_into_docker_hub
    steps:
      - uses: actions/checkout@master

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            touch .env
            echo ENGINE=${{ secrets.ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker compose up -d 
            sudo docker compose exec backend python manage.py makemigrations
            sudo docker compose exec backend python manage.py migrate
            sudo docker compose exec backend python manage.py import_csv

